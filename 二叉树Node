package Game;
import java.util.List;
import java.util.ArrayList;
/*
 * 二叉树
 * 原则：小的，相等的放在左节点上
 * 大的放在右节点上
 * */
public class Node {
	//左子节点
	public Node leftnode;
	//右子节点
	public Node rightnode;
	//当前节点
	public Object value;
	public void add(Object v) {
		//若当前节点没有值
		if(value==null)
			value=v;
		else {
			if((Integer)v-(Integer)value<=0) {
				if(null==leftnode) {
					leftnode=new Node();
				}
				leftnode.add(v);
				
			}else {
				if(rightnode==null) {
					rightnode=new Node();
				}
				rightnode.add(v);
				
			}
		}
	}
	//排序输出
	public List<Object> values(){
		List<Object> values=new ArrayList<>();
		if(leftnode!=null)
			values.addAll(leftnode.values());
		values.add(value);
		if(rightnode!=null)
			values.addAll(rightnode.values());
		return values;
			
	}
	public static void main(String[] args) {
		int ran[]=new int[] { 67, 7, 30, 73, 10, 0, 78, 81, 10, 74 };
		Node root=new Node();
		for(int r:ran)
			root.add(r);
		System.out.println(root.values());
	}
}
